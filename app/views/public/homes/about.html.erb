<div class="container">
  <div class="row text-center">
    <div class="col my-5">
      <h2>わたしといぬ</h2>
    </div>
  </div>

<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">

  <style>
    .animated {
      opacity: 0;
      /*0は完全に透明で非表示*/
      transition: opacity 3s;
      /*アニメーションが3秒かけて実行*/
    }
    .visible {
      opacity: 1;
      /*1は完全に不透明で表示*/
    }

    #sentence1, #sentence2, #sentence3, #sentence4 {
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="animated">
    <div id="sentence1">わたしといぬでは、わんちゃんをお連れでない方でも大歓迎です！</div>
    <div id="sentence2">犬好きな皆様が楽し時間を過ごしていただけるような「心安らぐ空間」を提供したいと考えています。</div>
    <div id="sentence3">お店のすぐそばには、ドッグラン施設が整っております。</div>
    <div id="sentence4">当店では、テイクアウトもやっておりますので、お忙しい方でもお気軽にご注文ください。</div>
  </div>

  <script>
    const animatedElement = document.querySelector('.animated');
    const sentences = document.querySelectorAll('#sentence1, #sentence2, #sentence3, #sentence4');

    let index = 0;
    function showNextSentence() {  //`showNextSentence`関数は、次の文を表示するための処理を行う\
    // `sentences`の長さ以下である場合、`sentences[index]`要素の`opacity`プロパティを1に設定し、`index`をインクリメントします。
      if (index < sentences.length) {
        sentences[index].style.opacity = 1;
        index++;
        setTimeout(showNextSentence, 3000); //3秒ごとに次の文が表示される\
      }
    }
// `runAnimation`という関数は、アニメーションの実行を制御します。
    function runAnimation() {
      // `animatedElement`の位置座標を取得
      const rect = animatedElement.getBoundingClientRect();
      if (rect.top <= window.innerHeight) {    // もし要素が画面内にある場合
        showNextSentence();  // `showNextSentence`関数を呼び出す
        animatedElement.classList.add('visible');  //`animatedElement`に`visible`クラスを追加
      } else {  //要素が画面外にある場合
        animatedElement.classList.remove('visible');  //`visible`クラスを削除
      }
    }
// HTMLドキュメントが読み込まれた後、アニメーションが実行 "DOMContentLoaded"を監視!!
    document.addEventListener('DOMContentLoaded', function() {
      runAnimation();
    });
// ウィンドウがスクロールされるたびにアニメーションが実行 "scroll"を監視!!
    window.addEventListener('scroll', function() {
      runAnimation();
    });
  </script>
</body>
</html>

  <div class="row mt-5">
    <div class="col-md-8 mx-auto">
      <div id="carouselExampleFade" class="carousel slide carousel-fade" data-ride="carousel" data-interval="2000">
                                    <!--スライドやアニメーションの演出  <!--自動的にカルーセルのスライドが開始,2秒で切り替わる-->
        <div class="carousel-inner"><!-- スライドが配置されるコンテナ -->
          <div id="carouselExample" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner">
              <div class="carousel-item active">
                <%= image_tag("sample-dog2.jpg", width: "400", height: "250", class: "d-block mx-auto", alt: "Centered Image") %>
              </div>
              <div class="carousel-item">
                <%= image_tag("sample-building1.jpg", width: "400", height: "250", class: "d-block mx-auto") %>
              </div>
              <div class="carousel-item">
                <%= image_tag("sample-building2.jpg", width: "400", height: "250", class: "d-block mx-auto") %>
              </div>
              <div class="carousel-item">
                <%= image_tag("sample-building3.jpg", width: "400", height: "250", class: "d-block mx-auto") %>
              </div>
              <div class="carousel-item">
                <%= image_tag("sample-building4.jpg", width: "400", height: "250", class: "d-block mx-auto") %>
              </div>
            </div>
          </div>
        </div>
        <!-- スライドを制御 -->
        <a class="carousel-control-prev" href="#carouselExampleFade" role="button" data-slide="prev">
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#carouselExampleFade" role="button" data-slide="next">
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class="sr-only">Next</span>
        </a>
      </div>
    </div>
  </div>
</div>
  <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_API_KEY'] %>&libraries=places&callback=initMap" async defer></script>

  <style>
    #map {
      height: 600px;
    }
  </style>
</head>
<body onload="initMap()">
  <div id="map"></div>
  <script>
    function initMap() {
      var map = new google.maps.Map(document.getElementById('map'), {
        center: { lat: 35.17213, lng: 136.91420 },
        zoom: 15
      });
    }
  </script>


